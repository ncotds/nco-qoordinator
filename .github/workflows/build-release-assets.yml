---
name: Build

on:
  release:
    types:
      - published

concurrency:
  group: build-release-assets
  cancel-in-progress: false

env:
  GO_VERSION: '1.22'

jobs:
  build-ncoq-api-binaries:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos:
          - 'linux'
        goarch:
          - 'amd64'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Install os packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: freetds-dev
          version: 1.0

      - name: Install dependencies
        run: make setup-tools

      - name: Build ncoq-api-${{ matrix.goos }}-${{ matrix.goarch }}
        run: |
          dist_dir=ncoq-api-${{ matrix.goos }}-${{ matrix.goarch }}
          mkdir $dist_dir
          go build -ldflags="-s -w -X='main.version=${{ github.ref_name }}'" -o $dist_dir/ncoq-api ./cmd/ncoq-api/...
          cp config/example.yml $dist_dir/config.yml
          cp docs/deploy-systemd/* $dist_dir/
          tar czvf ncoq-api-${{ matrix.goos }}-${{ matrix.goarch }}.tgz $dist_dir
          ls -lh ncoq-api-${{ matrix.goos }}-${{ matrix.goarch }}.tgz

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ncoq-api-${{ matrix.goos }}-${{ matrix.goarch }}.tgz
          asset_name: ncoq-api-${{ matrix.goos }}-${{ matrix.goarch }}.tgz
          asset_content_type: application/gzip

  build-ncoq-api-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          file: ./docs/deploy-docker/Dockerfile
          target: app
          tags: |
            ghcr.io/${{ github.repository}}:${{ github.ref_name }}
            ghcr.io/${{ github.repository}}:latest
          build-args: |
            GO_VERSION=${{ env.GO_VERSION }}
            VERSION=${{ github.ref_name }}
